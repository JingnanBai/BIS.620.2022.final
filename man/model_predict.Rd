% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{model_predict}
\alias{model_predict}
\title{get prediction for newdata based on given dataset}
\usage{
model_predict(data, mod, thre = 0.5, classname = c())
}
\arguments{
\item{data}{new dataset for classification, should be data.frame}

\item{mod}{the trained model, should be LogisticRegression(glm/lm) or
RandomForest model(randomForest)}

\item{thre}{classification threshold, if the predicted probability is higher
than given threshold, it would be assigned as positive class. default = 0.5}

\item{classname}{the name for the classes, should be assigned as c("positive
class", "negative class"). if is empty, the return value would be 0/1}
}
\value{
predicted value, return as a single factor column
}
\description{
This function could be use for conduction classification based
on given new dataset and models with specific threshold
}
\examples{
data(diabetic_data)
diabetic_data <- diabetic_data[1:100, c("time_in_hospital",
                                     "num_lab_procedures", "readmitted")] |>
                 ycol_mapped01(ycol = "readmitted", positive = "YES")
res <- build_logistic_regression(diabetic_data,
                         "readmitted", is_kfold = TRUE,
                         cv_num = 2, seed = 103221, is_smote = FALSE,
                         thre = 0.4)
pred_lr <- model_predict(diabetic_data[, c("time_in_hospital",
                                           "num_lab_procedures")],
                         res$model, thre = 0.4, classname = c("YES", "NO"))
}
